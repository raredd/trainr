% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/utils.R
\name{tabler_by}
\alias{tabler_by}
\title{tabler_by}
\usage{
tabler_by(dat, varname, byvar, n, order = FALSE, zeros, pct.col = FALSE)
}
\arguments{
\item{dat}{a data frame; variables \code{varname} and \code{byvar} should
be factors}

\item{varname}{variable with subgroups to count}

\item{byvar}{stratification variable}

\item{n}{number in each group; see details}

\item{order}{logical; order the result by decreasing frequency}

\item{zeros}{optional character string replacement for cells which have
zero counts; will appear as \code{0 (0\%)} if not given}

\item{pct.col}{logical; if \code{TRUE}, percents are separated into new
columns}
}
\description{
This function is helpful to make simple stratified tables, faster and
easier to use than \code{\link[tables]{tabular}}.
}
\details{
\code{varname} and \code{byvar} should be factors, and the levels will
appear in the output as they occur in \code{levels(x)}.

\code{n} is used to calculate the percentages. If missing, the output will
only show counts in the table. If given, \code{length(n)} should be one or
equal to the number of levels of \code{byvar}.

If one \code{n} is given, \code{tabler_by} assumes that this is the total
population for a subgroup, i.e., if creating a table for a subset of the
data, it is only necessary to provide the total \code{n} for that group.

If more than one \code{n} is given, \code{tabler_by} assumes that the
entire data set is given to \code{dat} and will use the corresponding
\code{n} to show percentages out of each respective subgroup.
}
\examples{
set.seed(1618)

f <- function(x, ...) sample(x, 100, replace = TRUE, ...)
tox <- data.frame(casenum = rep(1:10, 10), phase = 1:2,
                  tox_code = f(rawr::ctcae_v4$tox_code[1:25]),
                  tox_grade = f(1:3, prob = c(.6, .3, .1)),
                  stringsAsFactors = FALSE)

n <- table(tox[1:10, ]$phase)
tox <- cbind(tox, match_ctc(tox$tox_code)$matches[, c('tox_cat', 'tox_desc')])

tox <- within(tox, {
  phase <- factor(phase)
  tox_grade <- factor(tox_grade)
  tox_cat <- factor(tox_cat)
  tox_desc <- factor(tox_desc)
})

## get worst toxicities by casenum by grade
tox <- tox_worst(tox)$tox_worst

out <- cbind(tabler_by(tox, 'tox_desc',
                       'phase', n = n, zeros = '-')[, 1, drop = FALSE],
             tabler_by(tox[tox$phase == '1', ], 'tox_desc',
                       'tox_grade', n = n[1], zeros = '-'),
             tabler_by(tox[tox$phase == '2', ], 'tox_desc',
                       'tox_grade', n = n[2], zeros = '-'))
out <- out[order(as.numeric(out[, 1]), decreasing = TRUE), ]

library('htmlTable')
cgroup <- c(sprintf('Total<br /><font size=1>n = \%s</font>', sum(n)),
            sprintf('Phase I<br /><font size=1>n = \%s</font>', n[1]),
            sprintf('Phase II<br /><font size=1>n = \%s</font>', n[2]))
htmlTable(out, ctable = TRUE, cgroup = cgroup, n.cgroup = c(1, 4, 4),
    caption = 'Table 1: Toxicities<sup>&dagger;</sup> by phase and grade.',
    col.columns = rep(c('grey97','none','grey97'), times = c(1, 4, 4)),
    col.rgroup = rep(rep(c('none', 'grey97'), each = 5), 10),
    tfoot = paste0('<font size=1><sup>&dagger;</sup>Percentages represent ',
            'proportion of patients out of respective phase total.</font>'))
}

